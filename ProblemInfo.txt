
1. MaximumToys

Given a list of prices and an amount to spend, what is the maximum number of toys Mark can buy? 

----------------------------------------------------------------------------------------------

2. Sorting

Bubble Sort, Selection Sort, Insertion Sort, Merge Sort

----------------------------------------------------------------------------------------------

3. Fraudulent activity notification (Sorting) ****

If the amount spent by a client on a particular day is greater than or equal to twice the client's median spending for a trailing
number of days, they send the client a notification about potential fraud. The bank doesn't send the client any notifications
until they have at least that trailing number of prior days' transaction data.

Given the number of trailing days d and a client's total daily expenditures for a period of n days, 
find and print the number of times the client will receive a notification over all n days.

-------------------------------------------------------------------------------------------------

4. Minimum Absolute Difference ( Greedy)

Given an array of integers, find and print the minimum absolute difference between any two elements in the array.

---------------------------------------------------------------------------------------------------

5. Luck Balance ( Greedy)

 Lena believes in "saving luck", and wants to check her theory. Each contest is described by two integers, L[i] and T[i]: L[i]
is the amount of luck associated with a contest. If Lena wins the contest, her luck balance will decrease by L[i]; 
 if she loses it, her luck balance will increase by l[i].
 T[i] denotes the contest's importance rating. It's equal to  if the contest is important, and it's equal to  if it's unimportant.
If Lena loses no more than k important contests, what is the maximum amount of luck she can have after competing in 
all the preliminary contests? This value may be negative.

--------------------------------------------------------------------------------------------------

6. GreedyFlorist (Greedy)

To do this, he decides he'll multiply the price of each flower by the number of that customer's previously purchased flowers
plus 1. The first flower will be original price, ( 0 + 1)*originalprice , the next will be ( 1 + 1)*originalprice and so on.
Given the size of the group of friends, the number of flowers they want to purchase and the original prices of the flowers,
determine the minimum cost to purchase all of the flowers.

------------------------------------------------------------------------------------------------------

7. MaxMin (Greedy)

You will be given a list of integers, arr, and a single integer k. You must create an array of length k from elements of arr
such that its unfairness is minimized. Call that array . Unfairness of an array is calculated as difference
between max and min of that array

------------------------------------------------------------------------------------------------------

8. Balanced Brackets (Stacks)

Two brackets are considered to be a matched pair if the an opening bracket (i.e., (, [, or {) occurs 
to the left of a closing bracket (i.e., ), ], or }) of the exact same type.
we say a sequence of brackets is balanced if the following conditions are met:
1. It contains no unmatched brackets.
2. The subset of brackets enclosed within the confines of a matched pair of brackets is also a matched pair of brackets.

----------------------------------------------------------------------------------------------------------

9. Queues : A Tale of Two Stacks (Stacks) ****

In this challenge, you must first implement a queue using two stacks. Then process  queries, where each query is one of the following  types:
1 x: Enqueue element  into the end of the queue.
2: Dequeue the element at the front of the queue.
3: Print the element at the front of the queue.
For each query of type 3, return the value of the element at the front of the fifo queue on a new line.

----------------------------------------------------------------------------------------------------------

10. Warmup challenges : SockMerchant

John works at a clothing store. He has a large pile of socks that he must pair by color for sale. 
Given an array of integers representing the color of each sock, determine how many pairs of socks with matching colors
there are.

---------------------------------------------------------------------------------------------------

11. Warmup challenges : Counting Valleys

Given Gary's sequence of up and down steps during his last hike, find and print the number of valleys he walked through.
For example, if Gary's path is s = |DDUUUUDD|, he first enters a valley 2 units deep. 
Then he climbs out an up onto a mountain 2 units high. Finally, he returns to sea level and ends his hike.
Print a single integer that denotes the number of valleys Gary walked through during his hike.

--------------------------------------------------------------------------------------------------

12. Warmup challenges : Jumping on the clouds

Emma is playing a new mobile game that starts with consecutively numbered clouds. 
Some of the clouds are thunderheads and others are cumulus. She can jump on any cumulus cloud having a number
that is equal to the number of the current cloud plus  or . She must avoid the thunderheads.
Determine the minimum number of jumps it will take Emma to jump from her starting postion to the last cloud. 
It is always possible to win the game.

----------------------------------------------------------------------------------------------------

13. Warmup challenges : Repeated String

Lilah has a string, s, of lowercase English letters that she repeated infinitely many times.
Given an integer, n, find and print the number of letter a's in the first n letters of Lilah's infinite string.
For example, if the string 'abcac' and n=10, the substring we consider is abcacabcac, the first 10 characters of 
her infinite string. There are  occurrences of a in the substring.

------------------------------------------------------------------------------------------------

14. Stacks : Equal Stacks

You have three stacks of cylinders where each cylinder has the same diameter, 
but they may vary in height. You can change the height of a stack by removing and discarding its topmost cylinder 
any number of times.Find the maximum possible height of the stacks such that all of the stacks are exactly the same height. 
This means you must remove zero or more cylinders from the top of zero or more of the three stacks until 
they're all the same height, then print the height. The removals must be performed in such a way as to maximize the height.

-------------------------------------------------------------------------------------------------------

15. Stacks : MaximumElement

You have an empty sequence, and you will be given N queries. Each query is one of these three types:
1 x  -Push the element x into the stack.
2    -Delete the element present at the top of the stack.
3    -Print the maximum element in the stack.

----------------------------------------------------------------------------------------------------------

16. Strings: SuperReducedString (E)

Steveâ€™s task is to delete as many characters as possible using this method( delete adjacent characters) and print the resulting string. 
If the final string is empty, print Empty String

----------------------------------------------------------------------------------------------------------

17. Sorting: Lily's Homework (M) **

Consider an array of  distinct integers. George can swap any two elements of the array any number of times. 
An array is beautiful if the sum of |[arr[i] - arr[i-1]]| among 0 < i < n is minimal.
Given the array,determine and return the minimum number of swaps that should be performed in order to make the array beautiful.

-------------------------------------------------------------------------------------------------------

18. Dictionaries & HashMaps : Frequency Queries (M) **

You are given q queries. Each query is of the form two integers described below: 
x : Insert x in your data structure. 
y:  Delete one occurence of y from your data structure, if present. 
z:  Check if any integer is present whose frequency is exactly z. If yes, print 1 else 0.

-------------------------------------------------------------------------------------------------------

19. Arrays : SparseArrays (M)

There is a collection of input strings and a collection of query strings. 
For each query string, determine how many times it occurs in the list of input strings.

-------------------------------------------------------------------------------------------------------

20. LinkedLists: Find MergePoint in two Single Linked Lists (E) *

Given two Single Linked Lists , Find the point where the two lists merge.

--------------------------------------------------------------------------------------------------------

21. Strings: HighestValuePalindorme (M) **

You will be given a string representation of a number and a maximum number of changes you can make. 
Alter the string, one digit at a time, to create the string representation of the largest number possible given
 the limit to the number of changes.

 -----------------------------------------------------------------------------------------------------

 22. Greedy : GoodLand Electricity (M) **

 You are given a list of city data. Cities that may contain a power plant have been labeled 1. 
 Others not suitable for building a plant are labeled 0.
  Given a distribution range of k, find the lowest number of plants that must be built such that all cities are served. 
  The distribution range limits supply to cities where distance is less than k.

  ----------------------------------------------------------------------------------------------------

23. Stacks: Game of Two Stacks (M) **

In each move, Nick can remove one integer from the top of either stack A or stack B.
Nick keeps a running sum of the integers he removes from the two stacks.
Nick is disqualified from the game if, at any point, his running sum becomes greater than some integer x given at the beginning 
of the game. Nick's final score is the total number of integers he has removed from the two stacks.
Given A, B and x for q games, find the maximum possible score Nick can achieve (i.e., the maximum number of integers 
he can remove without being disqualified) during each game and print it on a new line.

-----------------------------------------------------------------------------------------------------

24. Recursion: Davis' Staircase (M) *

Davis has a number of staircases in his house and he likes to climb each staircase 1, 2, or 3 steps at a time. 
Being a very precocious child, he wonders how many ways there are to reach the top of the staircase.

-----------------------------------------------------------------------------------------------------

25. Recursion: Recursive Digit Sum [ SuperDigit] (M)

Given an integer, we need to find the super digit of the integer.
If x has only  digit, then its super digit is x. Otherwise, the super digit of x is equal to the super digit of 
the sum of the digits of x. You are given two numbers n and k. The number p is created by concatenating the string n k times. 
Find the superdigit of this number p.

--------------------------------------------------------------------------------------------------

26. Strings: Bear and Steady Gene (M) [Caterpillar technique] **

A gene is represented as a string of length n (where  is divisible by 4 ), composed of the letters A, C, T, and G. 
It is considered to be steady if each of the four letters occurs exactly n/4 times. Return an integer that represents 
the length of the smallest substring to replace to make the gene steady.

-----------------------------------------------------------------------------------------------

27. Searching : Triple Sum (M) *

Given 3 arrays a,b,c of different sizes, find the number of distinct triplets (p,q,r) where 
p is an element of a, q of b and r of c satisfying the criteria: p <= q and q >= r.

-----------------------------------------------------------------------------------------------------

28. Recursion: Crossword Puzzle (M) ***

A 10 x 10 Crossword grid is provided to you, along with a set of words (or names of places) which need to be filled into the grid. 
Cells are marked either + or -. Cells marked with a - are to be filled with the word list.

---------------------------------------------------------------------------------------------------------

29. Recursion: power Sum (M) *

Find the number of ways that a given integer, X, can be expressed as the sum of the Nth powers of unique, natural numbers.

-------------------------------------------------------------------------------------------------------


30. Dynamic Programming : Max Array Sum (M) *

Given an array of integers, find the subset of non-adjacent elements with the maximum sum. Calculate the sum of that subset.

----------------------------------------------------------------------------------------------------------------

21. Dynamic Programming : Candies (M) **

Alice wants to give at least 1 candy to each child. If two children sit next to each other, then the one with the higher rating
must get more candies. Alice wants to minimize the total number of candies she must buy. Find the minimum number of candies
Alice has to buy.

--------------------------------------------------------------------------------------------------------------

22. Dynamic Programming: Coin Change (M) **

a) Find total number of possible ways to make a sum using specific set of coins.
b) Find the minimum number of coins required to make a sum using specific set of coins.

--------------------------------------------------------------------------------------------------------------

23. Recursion : Stone Dvision Revisited (M) *

You have a pile of n stones that you want to split into multiple piles, as well as a set, S, of m distinct integers
look for some x in S such that x!= y and y is divisible by x (i.e., x is a factor of y); if such an x exists, 
you can split the pile into y/x equal smaller piles.
Calculate the maximum possible number of moves you can perform and print it on a new line.

--------------------------------------------------------------------------------------------------------------------

24. Dynamic Programming : Sam and Substrings (M) **

Given an integer as a string, sum all of its substrings cast as integers. As the number may become large, 
return the value modulo 10^9 + 7.

----------------------------------------------------------------------------------------------------------------

25. Searching : Minimum Loss (M) *

Lauren has a chart of distinct projected prices for a house over the next several years. She must buy the house in one year
and sell it in another, and she must do so at a loss. She wants to minimize her financial loss.

---------------------------------------------------------------------------------------------------------------

26. Dynamic Progrtamming : Sherlock and Cost (M) **

You will be given an array B and must determine an array A. There is a special rule: For all i, A[i] <= B[i] . That is, A[i]
can be any number you choose such that 1 <= A[i] <= B[i]. Your task is to select a series of A[i] given B[i] such that
 the sum of the absolute difference of consecutive pairs of A is maximized

 --------------------------------------------------------------------------------------------------------------
